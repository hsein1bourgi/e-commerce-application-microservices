name: CI - Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: read

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPO_PREFIX: ecom-app

jobs:
  detect-changes:
    name: Detect changed services
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      count:  ${{ steps.set-matrix.outputs.count }}
    steps:
      - uses: actions/checkout@v4

      - name: Compute changed services
        id: set-matrix
        shell: bash
        run: |
          # Decide the diff range based on the event
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE="${{ github.event.pull_request.base.ref }}"
            git fetch --no-tags --prune --depth=1 origin +refs/heads/$BASE:refs/remotes/origin/$BASE
            RANGE="origin/$BASE...HEAD"
          else
            # push event
            if [ "${{ github.ref }}" = "refs/heads/main" ]; then
              RANGE="${{ github.event.before }}...${{ github.sha }}"
            else
              git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main
              RANGE="origin/main...HEAD"
            fi
          fi

          CHANGED="$(git diff --name-only --diff-filter=ACMR $RANGE || true)"
          echo "Changed files:"; echo "$CHANGED"

          list=()
          echo "$CHANGED" | grep -q '^customer/'  && list+=('"customer"')
          echo "$CHANGED" | grep -q '^products/'  && list+=('"products"')
          echo "$CHANGED" | grep -q '^shopping/'  && list+=('"shopping"')

          if [ ${#list[@]} -eq 0 ]; then
            echo 'matrix={"service":[]}' >> "$GITHUB_OUTPUT"
            echo 'count=0' >> "$GITHUB_OUTPUT"
          else
            echo "matrix={\"service\":[${list[*]}]}" >> "$GITHUB_OUTPUT"
            echo "count=${#list[@]}" >> "$GITHUB_OUTPUT"
          fi

      - name: Debug
        run: |
          echo "matrix => ${{ steps.set-matrix.outputs.matrix }}"
          echo "count  => ${{ steps.set-matrix.outputs.count }}"

  build-local:
    name: Build Local Docker Images (No Push)
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.count != '0' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: local/${{ matrix.service }}
          tags: |
            type=sha
            type=raw,value=ci-local
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build (no push) with GHA cache
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      - name: Show produced tags
        run: echo '${{ steps.meta.outputs.tags }}'
