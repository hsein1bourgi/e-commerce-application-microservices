name: CI - Build and Push Docker Images
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: read

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPO_PREFIX: ecom-app

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            customer:
              - 'customer/**'
              - '!customer/node_modules/**'
            products:
              - 'products/**'
              - '!products/node_modules/**'
            shopping:
              - 'shopping/**'
              - '!shopping/node_modules/**'

      - id: set-matrix
        run: |
          list=()
          [[ "${{ steps.changes.outputs.customer }}" == "true" ]] && list+=('"customer"')
          [[ "${{ steps.changes.outputs.products }}" == "true" ]] && list+=('"products"')
          [[ "${{ steps.changes.outputs.shopping }}" == "true" ]] && list+=('"shopping"')
          if [ ${#list[@]} -eq 0 ]; then
            echo 'matrix={"service":[]}' >> "$GITHUB_OUTPUT"
          else
            echo "matrix={\"service\":[${list[*]}]}" >> "$GITHUB_OUTPUT"
          fi

      - name: Log matrix
        run: echo '${{ steps.set-matrix.outputs.matrix }}'

  build-local:
    name: Build Local Docker Images (No Push)
    needs: detect-changes
    if: ${{ fromJson(needs.detect-changes.outputs.matrix).service != null && length(fromJson(needs.detect-changes.outputs.matrix).service) > 0 }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: local/${{ matrix.service }}
          tags: |
            type=sha
            type=raw,value=ci-local
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build (no push) with GHA cache
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      - name: Show produced tags
        run: echo '${{ steps.meta.outputs.tags }}'


